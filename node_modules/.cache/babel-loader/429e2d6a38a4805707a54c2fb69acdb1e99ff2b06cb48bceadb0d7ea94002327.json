{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/eli.leblanc/Documents/Eli/repos/beu-split/my-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _toConsumableArray from\"/Users/eli.leblanc/Documents/Eli/repos/beu-split/my-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _createClass from\"/Users/eli.leblanc/Documents/Eli/repos/beu-split/my-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"/Users/eli.leblanc/Documents/Eli/repos/beu-split/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import{Carte,Sorte,Symbole}from\"./carte\";var AsInfo=/*#__PURE__*/_createClass(function AsInfo(as){_classCallCheck(this,AsInfo);this.as=as;this.beu=null;this.nSorte=0;});var ChienInfo=/*#__PURE__*/_createClass(function ChienInfo(chien,ratio){_classCallCheck(this,ChienInfo);this.chien=chien;this.ratio=ratio;});export var MeilleureCarte=/*#__PURE__*/function(){function MeilleureCarte(){_classCallCheck(this,MeilleureCarte);}_createClass(MeilleureCarte,[{key:\"piger\",value:function piger(cartes,contrainte){if(cartes.length===1){return cartes[0];}var choix=[];switch(contrainte){case'min':{var minVal=Math.min.apply(Math,_toConsumableArray(cartes.map(function(c){return c.poids;})));choix=cartes.filter(function(c){return c.poids===minVal;});break;}case'max':{var _minVal=Math.max.apply(Math,_toConsumableArray(cartes.map(function(c){return c.poids;})));choix=cartes.filter(function(c){return c.poids===_minVal;});break;}default:{choix=cartes;break;}}var idx=Math.floor(Math.random()*choix.length);return cartes[idx];}},{key:\"getCarte4\",value:function getCarte4(sorteDemandee,atout,mesCartes){var cartes=mesCartes.filter(function(c){return!c.isDisabled(mesCartes,sorteDemandee,atout);});var pointSec=this.getPointSec(this.getCartesSeches(cartes,atout),13);if(pointSec!==null){return pointSec;}return cartes[0];}},{key:\"getMain1Carte1\",value:function getMain1Carte1(mesCartes,atout,pile){var cartesAs=mesCartes.filter(function(c){return c.symbole===Symbole.AS;});var cartesBeu=mesCartes.filter(function(c){return c.symbole===Symbole.ROI;});// Cherche une pair beu-as (pas d'atout)\nvar asInfos=[];var _iterator=_createForOfIteratorHelper(cartesAs),_step;try{var _loop=function _loop(){var as=_step.value;if(!as.isAtout(atout)){var asInfo=new AsInfo(as);var beuMemeSorte=cartesBeu.find(function(c){return c.sorte===as.sorte;});if(beuMemeSorte!==undefined){asInfo.beu=beuMemeSorte;}asInfo.nSorte=mesCartes.filter(function(c){return c.sorte===as.sorte;}).length;asInfos.push(asInfo);}};for(_iterator.s();!(_step=_iterator.n()).done;){_loop();}}catch(err){_iterator.e(err);}finally{_iterator.f();}if(asInfos.length>0){var avecBeu=asInfos.filter(function(as){return as.beu!==null;});if(avecBeu.length>0){// Joue le beu accoté par un as qui a le plus faible nombre de cartes de cette sorte\nvar _nMin=Math.min.apply(Math,_toConsumableArray(avecBeu.map(function(as){return as.nSorte;})));var avecBeuMin=avecBeu.filter(function(as){return as.nSorte===_nMin;});return this.piger(avecBeuMin.map(function(as){return as.beu;}));}// Joue l'as qui a le plus faible nombre de cartes de cette sorte\nvar nMin=Math.min.apply(Math,_toConsumableArray(asInfos.map(function(as){return as.nSorte;})));var asMin=asInfos.filter(function(as){return as.nSorte===nMin;});return this.piger(asMin.map(function(as){return as.as;}));}// Cherche une carte sèche (sauf atout)\nvar cartesSeches=this.getCartesSeches(mesCartes,atout);var chienSec=this.getChienSec(cartesSeches,atout);if(chienSec!==null){// Priorise chien\nreturn chienSec;}var pointSec=this.getPointSec(cartesSeches,10);if(pointSec!==null){// Priorise 10, ensuite beu\nreturn pointSec;}// Cherche un chien\nvar chien=this.getMeilleurChien(mesCartes,atout,pile,[]);if(chien!==null){return chien;}// Joue un 10 qui n'est pas de l'atout\nvar dix=mesCartes.filter(function(c){return c.poids===10&&!c.isAtout(atout);});if(dix.length>0){return this.piger(dix);}// À ce stade-ci, il ne reste que de l'atout, jouer la plus forte\nreturn mesCartes[mesCartes.length-1];}},{key:\"getCarte1\",value:function getCarte1(){}},{key:\"getCartesSeches\",value:function getCartesSeches(mesCartes,atout){return mesCartes.filter(function(c){return c.isSeche(mesCartes,atout)&&!c.isAtout(atout);});}},{key:\"getChienSec\",value:function getChienSec(cartesSeches,atout){var chiensSecs=cartesSeches.filter(function(c){return c.isChien(atout,true);});if(chiensSecs.length>0){// Priorise les chiens\nreturn this.piger(chiensSecs,'min');}return null;}},{key:\"getDixSec\",value:function getDixSec(cartesSeches){var dixSecs=cartesSeches.filter(function(c){return c.poids===10;});if(dixSecs.length>0){// Priorise 10\nreturn this.piger(dixSecs);}return null;}},{key:\"getBeuSec\",value:function getBeuSec(cartesSeches){var beuxSecs=cartesSeches.filter(function(c){return c.symbole===Symbole.ROI;});if(beuxSecs.length>0){// Priorise beu\nreturn this.piger(beuxSecs);}return null;}},{key:\"getMeilleurChien\",value:function getMeilleurChien(mesCartes,atout,pile){var _this=this;var chiens=mesCartes.filter(function(c){return c.isChien(atout,true);});var ratios=[];if(chiens.length>0){// Priorise les chiens qui ont le meilleur ratio chien/point\nvar _iterator2=_createForOfIteratorHelper(chiens),_step2;try{var _loop2=function _loop2(){var chien=_step2.value;var pointsSorte=mesCartes.filter(function(c){return c.sorte===chien.sorte&&c.points>0;});var totPoints=0;var _iterator3=_createForOfIteratorHelper(pointsSorte),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var p=_step3.value;var maitre=_this.isCarteMaitre(p,mesCartes,pile,atout);totPoints+=p.points;}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}var chiensSorte=chiens.filter(function(c){return c.sorte===chien.sorte;});var ratio=Number(chiensSorte.length)/totPoints;ratios.push(new ChienInfo(chien,ratio));};for(_iterator2.s();!(_step2=_iterator2.n()).done;){_loop2();}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}var minRatio=Math.min.apply(Math,_toConsumableArray(ratios.map(function(r){return r.ratio;})));var chiensMinRatio=ratios.filter(function(r){return r.ratio===minRatio;});return this.piger(chiensMinRatio.map(function(c){return c.chien;}),'min');}return null;}},{key:\"getPointSec\",value:function getPointSec(cartesSeches,priorite){var beuSec=this.getBeuSec(cartesSeches);var dixSec=this.getDixSec(cartesSeches);if(beuSec!==null&&(priorite===13||dixSec===null)){return beuSec;}if(dixSec!==null){return dixSec;}return null;}/**\n     * Teste si la carte est maître\n     * @param carte: carte à tester\n     */},{key:\"isCarteMaitre\",value:function isCarteMaitre(carte,mesCartes,pile,atout){var cartesMeilleures=[];for(var i=carte.poids+1;i<=14;++i){var c=new Carte();c.setFromPoids(i,carte.sorte);cartesMeilleures.push(c);}if(carte.isAtout(atout)){if(!carte.isBlanche()){var c1=new Carte();c1.setBlanche();cartesMeilleures.push(c1);if(!carte.isJoker()){var c2=new Carte();c2.setJoker();cartesMeilleures.push(c2);}}}var _loop3=function _loop3(){var mCarte=_cartesMeilleures[_i];var cPile=pile.find(function(c){return c.key===mCarte.key;});var cMoi=mesCartes.find(function(c){return c.key===mCarte.key;});if(cPile===undefined&&cMoi===undefined){return{v:false};}};for(var _i=0,_cartesMeilleures=cartesMeilleures;_i<_cartesMeilleures.length;_i++){var _ret=_loop3();if(typeof _ret===\"object\")return _ret.v;}return true;}}]);return MeilleureCarte;}();","map":{"version":3,"names":["Carte","Sorte","Symbole","AsInfo","as","beu","nSorte","ChienInfo","chien","ratio","MeilleureCarte","cartes","contrainte","length","choix","minVal","Math","min","map","c","poids","filter","max","idx","floor","random","sorteDemandee","atout","mesCartes","isDisabled","pointSec","getPointSec","getCartesSeches","pile","cartesAs","symbole","AS","cartesBeu","ROI","asInfos","isAtout","asInfo","beuMemeSorte","find","sorte","undefined","push","avecBeu","nMin","avecBeuMin","piger","asMin","cartesSeches","chienSec","getChienSec","getMeilleurChien","dix","isSeche","chiensSecs","isChien","dixSecs","beuxSecs","chiens","ratios","pointsSorte","points","totPoints","p","maitre","isCarteMaitre","chiensSorte","Number","minRatio","r","chiensMinRatio","priorite","beuSec","getBeuSec","dixSec","getDixSec","carte","cartesMeilleures","i","setFromPoids","isBlanche","c1","setBlanche","isJoker","c2","setJoker","mCarte","cPile","key","cMoi"],"sources":["/Users/eli.leblanc/Documents/Eli/repos/beu-split/my-app/src/models/meilleure-carte.js"],"sourcesContent":["import { Carte, Sorte, Symbole } from \"./carte\";\n\nclass AsInfo {\n    constructor(as) {\n        this.as = as;\n        this.beu = null;\n        this.nSorte = 0;\n    }\n}\n\nclass ChienInfo {\n    constructor(chien, ratio) {\n        this.chien = chien;\n        this.ratio = ratio;\n    }\n}\n\nexport class MeilleureCarte {\n    constructor() {\n    }\n\n    piger(cartes, contrainte) {\n        if (cartes.length === 1) {\n            return cartes[0];\n        }\n        let choix = [];\n        switch (contrainte) {\n            case 'min': {\n                const minVal = Math.min(...cartes.map(c => c.poids));\n                choix = cartes.filter(c => c.poids === minVal);\n                break;\n            }\n            case 'max': {\n                const minVal = Math.max(...cartes.map(c => c.poids));\n                choix = cartes.filter(c => c.poids === minVal);\n                break;\n            }\n            default: {\n                choix = cartes;\n                break;\n            }\n        }\n        const idx = Math.floor(Math.random() * choix.length);\n        return cartes[idx];\n    }\n\n    getCarte4(sorteDemandee, atout, mesCartes) {\n        const cartes = mesCartes.filter(c => !c.isDisabled(mesCartes, sorteDemandee, atout));\n        \n        const pointSec = this.getPointSec(this.getCartesSeches(cartes, atout), 13);\n        if (pointSec !== null) {\n            return pointSec;\n        }\n        return cartes[0];\n    }\n\n    getMain1Carte1(mesCartes, atout, pile) {\n        const cartesAs = mesCartes.filter(c => c.symbole === Symbole.AS);\n        const cartesBeu = mesCartes.filter(c => c.symbole === Symbole.ROI)\n\n        // Cherche une pair beu-as (pas d'atout)\n        const asInfos = [];\n        for (let as of cartesAs) {\n            if (!as.isAtout(atout)) {\n                const asInfo = new AsInfo(as);\n                const beuMemeSorte = cartesBeu.find(c => c.sorte === as.sorte);\n                if (beuMemeSorte !== undefined) {\n                    asInfo.beu = beuMemeSorte;\n                }\n                asInfo.nSorte = mesCartes.filter(c => c.sorte === as.sorte).length;\n                asInfos.push(asInfo);\n            }\n        }\n        if (asInfos.length > 0){\n            const avecBeu = asInfos.filter(as => as.beu !== null);\n            if (avecBeu.length > 0) {\n                // Joue le beu accoté par un as qui a le plus faible nombre de cartes de cette sorte\n                const nMin = Math.min(...avecBeu.map(as => as.nSorte));\n                const avecBeuMin = avecBeu.filter(as => as.nSorte === nMin);\n                return this.piger(avecBeuMin.map(as => as.beu));\n            }\n            // Joue l'as qui a le plus faible nombre de cartes de cette sorte\n            const nMin = Math.min(...asInfos.map(as => as.nSorte));\n            const asMin = asInfos.filter(as => as.nSorte === nMin);\n            return this.piger(asMin.map(as => as.as));\n        }\n\n        // Cherche une carte sèche (sauf atout)\n        const cartesSeches = this.getCartesSeches(mesCartes, atout);\n        const chienSec = this.getChienSec(cartesSeches, atout);\n        if (chienSec !== null) {\n            // Priorise chien\n            return chienSec;\n        }\n        const pointSec = this.getPointSec(cartesSeches, 10);\n        if (pointSec !== null) {\n            // Priorise 10, ensuite beu\n            return pointSec;\n        }\n\n        // Cherche un chien\n        const chien = this.getMeilleurChien(mesCartes, atout,pile,[]);\n        if (chien !== null) {\n            return chien;\n        }\n\n        // Joue un 10 qui n'est pas de l'atout\n        const dix = mesCartes.filter(c => c.poids === 10 && !c.isAtout(atout));\n        if (dix.length > 0) {\n            return this.piger(dix);\n        }\n\n        // À ce stade-ci, il ne reste que de l'atout, jouer la plus forte\n        return mesCartes[mesCartes.length - 1];\n    }\n\n    getCarte1() {}\n\n    getCartesSeches(mesCartes, atout) {\n        return mesCartes.filter(c => c.isSeche(mesCartes, atout) && !c.isAtout(atout));\n    }\n\n    getChienSec(cartesSeches, atout) {\n        const chiensSecs = cartesSeches.filter(c => c.isChien(atout, true));\n        if (chiensSecs.length > 0) {\n            // Priorise les chiens\n            return this.piger(chiensSecs, 'min');\n        }\n        return null;\n    }\n\n    getDixSec(cartesSeches) {\n        const dixSecs = cartesSeches.filter(c => c.poids === 10);\n        if (dixSecs.length > 0) {\n            // Priorise 10\n            return this.piger(dixSecs);\n        }\n        return null;\n    }\n\n    getBeuSec(cartesSeches){\n    const beuxSecs = cartesSeches.filter(c => c.symbole === Symbole.ROI);\n        if (beuxSecs.length > 0) {\n            // Priorise beu\n            return this.piger(beuxSecs);\n        }\n        return null;\n    }\n\n    getMeilleurChien(mesCartes, atout, pile) {\n        let chiens = mesCartes.filter(c => c.isChien(atout, true));\n        \n        let ratios = [];\n        if (chiens.length > 0) {\n            // Priorise les chiens qui ont le meilleur ratio chien/point\n            for (let chien of chiens) {\n                const pointsSorte = mesCartes.filter(c => c.sorte === chien.sorte && c.points > 0);\n                let totPoints = 0;\n                for (let p of pointsSorte) {\n                    const maitre = this.isCarteMaitre(p, mesCartes, pile, atout);\n                    totPoints += p.points;\n                }\n                const chiensSorte = chiens.filter(c => c.sorte === chien.sorte);\n                const ratio = Number(chiensSorte.length)/totPoints;\n                ratios.push(new ChienInfo(chien, ratio));\n            }\n            const minRatio = Math.min(...ratios.map(r => r.ratio));\n            const chiensMinRatio = ratios.filter(r => r.ratio === minRatio);\n            return this.piger(chiensMinRatio.map(c => c.chien), 'min');\n        }\n        return null;\n    }\n\n    getPointSec(cartesSeches, priorite) {\n        const beuSec = this.getBeuSec(cartesSeches);\n        const dixSec = this.getDixSec(cartesSeches);\n\n        if (beuSec !== null && (priorite === 13 || dixSec === null)) {\n            return beuSec;\n        }\n\n        if (dixSec !== null) {\n            return dixSec;\n        }\n        return null;\n    }\n\n    /**\n     * Teste si la carte est maître\n     * @param carte: carte à tester\n     */\n    isCarteMaitre(carte, mesCartes, pile, atout) {\n        let cartesMeilleures = [];\n        for (let i = carte.poids + 1; i <= 14; ++i) {\n            const c = new Carte();\n            c.setFromPoids(i, carte.sorte);\n            cartesMeilleures.push(c);\n        }\n        if (carte.isAtout(atout)) {\n            if (!carte.isBlanche()) {\n                const c1 = new Carte();                \n                c1.setBlanche();\n                cartesMeilleures.push(c1);\n                if (!carte.isJoker()) {\n                    const c2 = new Carte();\n                    c2.setJoker();\n                    cartesMeilleures.push(c2);\n                }                \n            } \n        }\n        for (let mCarte of cartesMeilleures) {\n            const cPile = pile.find(c => c.key === mCarte.key);\n            const cMoi = mesCartes.find(c => c.key === mCarte.key);\n            if (cPile === undefined && cMoi === undefined) {\n                return false;\n            }\n        }\n        return true;\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}